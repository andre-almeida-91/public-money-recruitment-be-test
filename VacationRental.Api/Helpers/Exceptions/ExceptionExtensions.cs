using FluentValidation;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Linq;
using System.Net;
using VacationRental.Application.Behaviors.Validation;

namespace VacationRental.Api.Helpers.Exceptions
{
    /// <summary>
    /// To serialize Exception as valid JSON content
    /// This prevents errors generated by System.Text.Json
    /// </summary>
    public static class ExceptionExtensions
    {
        /// <summary>
        /// Serialize an exception into a valid ProblemDetails model that can be serialized by System.Text.Json
        /// </summary>
        /// <param name="e"></param>
        /// <returns></returns>
        public static ProblemDetails Serialize(this Exception e) => new()
        {
            Status = (int)GetErrorCode(e.InnerException ?? e),
            Detail = GetCustomErrorMessage(e),
            Title = e.Message
        };

        private static string GetCustomErrorMessage(Exception e)
        {
            switch (e)
            {
                case CustomValidationException _:
                    var exception = (CustomValidationException)e;

                    var errors = exception.Errors.Select(m => $"[{m.Key}]: {string.Join(", ", m.Value)}").ToArray();

                    return string.Join(";", errors);

                default: return default;
            }
        }

        private static HttpStatusCode GetErrorCode(Exception e)
        {
            switch (e)
            {
                case ValidationException _:
                    return HttpStatusCode.BadRequest;
                case CustomValidationException _:
                    return HttpStatusCode.BadRequest;
                case NotImplementedException _:
                    return HttpStatusCode.BadRequest;
                case ApplicationException _:
                    return HttpStatusCode.BadRequest;
                case NullReferenceException _:
                    return HttpStatusCode.NotFound;
                default:
                    return HttpStatusCode.InternalServerError;
            }
        }

    }
}
